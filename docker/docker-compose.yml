version: '3'

services:
  db:
    restart: always
    container_name: sevici-db
    image: postgis/postgis:15-3.3-alpine
    volumes:
      - db:/var/lib/postgresql/data
    networks:
      - sevici
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}

  backend:
    restart: always
    container_name: sevici-api
    image: sevici-api:latest
    build: 
      context: ..
      dockerfile: ./docker/backend/Dockerfile
    command: bash -c "/usr/src/app/sevici-api/entrypoint.sh  && gunicorn --bind 0.0.0.0:8000 sevici_api.wsgi"
    environment:
      DEBUG: ${DEBUG}
      DJANGO_ENV: ${DJANGO_ENV}
      DJANGO_ADMIN_USER: ${DJANGO_ADMIN_USER}
      DJANGO_ADMIN_EMAIL: ${DJANGO_ADMIN_EMAIL}
      DJANGO_ADMIN_PASSWORD: ${DJANGO_ADMIN_PASSWORD}
      DJANGO_SECRET_KEY: ${DJANGO_SECRET_KEY}
      DATABASE: ${DATABASE}
      DB_NAME: ${DB_NAME}
      DB_USER: ${POSTGRES_USER}
      DB_PASSWORD: ${POSTGRES_PASSWORD}
      DB_HOST: ${DB_HOST}
      DB_PORT: ${DB_PORT}
      API_KEY: ${SEVICI_API_KEY}
      CONTRACT: ${SEVICI_CONTRACT}
      SWAGGER_URL: ${SWAGGER_URL}

    volumes:
      - static:/usr/src/app/sevici-api/static
    expose:
      - 8000
    depends_on:
      - db
    links:
      - db
    networks:
      - sevici

  client:
    restart: always
    container_name: sevici-client
    image: sevici-client:latest
    build: 
      context: ..
      dockerfile: ./docker/client/Dockerfile
      args:
        API_SERVER: ${API_SERVER_URL}
    environment:
      NODE_ENV: ${NODE_ENV}
      REACT_APP_API_SERVER: ${API_SERVER_URL}
    command: sh -c "serve -s build -l 3000 --no-clipboard"
    depends_on:
      - backend
    expose:
      - 3000
    networks:
      - sevici

  nginx:
    restart: always
    container_name: sevici-nginx
    image: sevici-nginx:latest
    build:
        context: ../nginx
        dockerfile: ./Dockerfile
    volumes:
      - static:/usr/src/app/sevici-api/static
    ports:
      - 80:80
    depends_on:
      - backend
    networks:
      - sevici

volumes:
  static:
    name: sevici-static
  db:
    name: sevici-db


networks:
  sevici:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.5.0.0/16